#!/bin/sh

set -e
set -u

installAll() {
  rm -rf build/ext/bin
  mkdir -p build/ext/bin

  checkInstall "Go" "1.24.4"
  checkInstall "GolangCILint" "2.1.6"
  checkInstall "ShellCheck" "0.10.0"
  checkInstall "GoTask" "3.44.0"
}

checkInstall() {
  name=$1
  version=$2

  install_path="build/ext"

  if [ -d "${install_path}" ] && [ -f "${install_path}/.${name}_${version}" ]; then
    "link${name}" "${install_path}" "${version}"
    return
  fi

  mkdir -p "${install_path}/tmp/"
  echo "Install ${name} - ${version}"
  rm -rf "${install_path}/.${name}_"*
  "install${name}" "${install_path}" "${version}"
  touch "${install_path}/.${name}_${version}"
  rm -rf "${install_path}/tmp"
}

installGo() {
  install_path=$1
  version=$2

  curl -L "https://go.dev/dl/go${version}.linux-amd64.tar.gz" --output "${install_path}/tmp/go.linux-amd64.tar.gz"
  rm -rf "${install_path}/go"
  tar xf "${install_path}/tmp/go.linux-amd64.tar.gz" -C "${install_path}"

  linkGo "${install_path}"
}

linkGo() {
  install_path=$1

  ln -s "$(readlink -f "${install_path}/go/bin/go" || true)" "${install_path}/bin/go"
  ln -s "$(readlink -f "${install_path}/go/bin/gofmt" || true)" "${install_path}/bin/gofmt"
}

installGolangCILint() {
  install_path=$1
  version=$2

  curl -L "https://github.com/golangci/golangci-lint/releases/download/v${version}/golangci-lint-${version}-linux-amd64.tar.gz" --output "${install_path}/tmp/golangci-lint.linux-amd64.tar.gz"
  rm -rf "${install_path}/golangci-lint"
  tar xf "${install_path}/tmp/golangci-lint.linux-amd64.tar.gz" -C "${install_path}"
  mv "${install_path}/golangci-lint-${version}-linux-amd64" "${install_path}/golangci-lint"

  linkGolangCILint "${install_path}"
}

linkGolangCILint() {
  install_path=$1

  ln -s "$(readlink -f "${install_path}/golangci-lint/golangci-lint" || true)" "${install_path}/bin/golangci-lint"
}

installShellCheck() {
  install_path=$1
  version=$2

  curl -L "https://github.com/koalaman/shellcheck/releases/download/v${version}/shellcheck-v${version}.linux.x86_64.tar.xz" --output "${install_path}/tmp/shellcheck.tar.xz"
  rm -rf "${install_path}/shellcheck"
  tar xf "${install_path}/tmp/shellcheck.tar.xz" -C "${install_path}"
  mv "${install_path}/shellcheck-v${version}" "${install_path}/shellcheck"

  linkShellCheck "${install_path}"
}

linkShellCheck() {
  install_path=$1

  ln -s "$(readlink -f "${install_path}/shellcheck/shellcheck" || true)" "${install_path}/bin/shellcheck"
}


installGoTask() {
  install_path=$1
  version=$2

  curl -L "https://github.com/go-task/task/releases/download/v${version}/task_linux_amd64.tar.gz" --output "${install_path}/tmp/task.tar.gz"
  rm -rf "${install_path}/task"
  mkdir -p "${install_path}/task"
  tar xf "${install_path}/tmp/task.tar.gz" -C "${install_path}/task"

  linkGoTask "${install_path}"
}

linkGoTask() {
  install_path=$1

  bin_path="$(readlink -f "${install_path}/task/task")"
  ln -s "${bin_path}" "${install_path}/bin/task"
}

cd "$(dirname "$(readlink -f "$0" || true)")/.."
installAll
